
# --- AI Provider API Keys ---
# Uncomment and set the keys for the services you want to use.
# The application will try providers in the order they are defined in the code.

# Claude API Key (https://console.anthropic.com/dashboard)
CLAUDE_API_KEY=

# OpenAI API Key (https://platform.openai.com/api-keys)
OPENAI_API_KEY=

# Gemini API Key (https://aistudio.google.com/app/apikey)
GEMINI_API_KEY=

# --- Custom API Configuration ---
# For advanced users: connect to a custom OpenAI/Claude-compatible API endpoint.
# This could be a local model, a proxy, or a different service provider.

# CUSTOM_API_KEY: Your API key for the custom service.
CUSTOM_API_KEY=

# CUSTOM_API_BASE_URL: The base URL of the API (e.g., http://localhost:1234/v1).
CUSTOM_API_BASE_URL=

# CUSTOM_API_ENDPOINT: The chat completions endpoint (default: /chat/completions).
CUSTOM_API_ENDPOINT=/chat/completions

# CUSTOM_API_MODEL: The model name to use (default: gpt-3.5-turbo).
CUSTOM_API_MODEL=gpt-3.5-turbo

# CUSTOM_API_FORMAT: The API format ('openai', 'claude', or 'custom').
CUSTOM_API_FORMAT=openai

# CUSTOM_API_HEADER_PREFIX: The prefix for the Authorization header (default: Bearer).
# Common values: 'Bearer', 'x-api-key', 'API-Key'.
CUSTOM_API_HEADER_PREFIX=Bearer

# CUSTOM_API_MAX_TOKENS: The maximum number of tokens for the response (default: 4000).
CUSTOM_API_MAX_TOKENS=4000

# CUSTOM_API_TEMPERATURE: The sampling temperature for the model (default: 0.7).
CUSTOM_API_TEMPERATURE=0.7


# --- Application Settings ---

# Frontend URL for CORS configuration
FRONTEND_URL=http://localhost:3000

# Server port
PORT=3001

# Node environment ('development' or 'production')
NODE_ENV=development

# Use backend API keys ('true' or 'false')
# When 'true', the backend uses its configured API keys.
# When 'false', it returns a 403 error, expecting frontend to provide keys.
USE_BACKEND_API_KEYS=true
